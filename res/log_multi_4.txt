使用的SFClist文件为：topo/allSFCList_4.xlsx

C:\python3.7\python.exe "D:/pycharm workspace/GraduationProject/main/main.py"
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
{1: 85.0, 2: 72.0, 3: 88.0, 4: 73.0, 5: 88.0, 6: 87.0, 7: 90.0, 8: 77.0, 9: 66.0, 10: 73.0, 11: 93.0, 12: 72.0, 13: 91.0, 14: 65.0, 15: 93.0, 16: 86.0, 17: 72.0, 18: 73.0, 19: 73.0, 20: 93.0, 21: 83.0, 22: 68.0, 23: 84.0, 24: 100.0, 25: 85.0}
{1: 85.0, 2: 72.0, 3: 88.0, 4: 73.0, 5: 88.0, 6: 87.0, 7: 90.0, 8: 77.0, 9: 66.0, 10: 73.0, 11: 93.0, 12: 72.0, 13: 91.0, 14: 65.0, 15: 93.0, 16: 86.0, 17: 72.0, 18: 73.0, 19: 73.0, 20: 93.0, 21: 83.0, 22: 68.0, 23: 84.0, 24: 100.0, 25: 85.0}
dict_provided_reliablity = 
{1: 0.92, 2: 0.94, 3: 0.92, 4: 0.9, 5: 0.9, 6: 0.99, 7: 0.94, 8: 0.99, 9: 0.92, 10: 0.95, 11: 0.9, 12: 0.95, 13: 0.94, 14: 0.92, 15: 0.93, 16: 0.92, 17: 0.92, 18: 0.95, 19: 0.93, 20: 0.95, 21: 0.95, 22: 0.96, 23: 0.99, 24: 0.99, 25: 0.99}
This is VMList class.
allVNFCount = 30
activeVNFCount = 30
this is the SFC.class
1 2 1.0
1 4 3.0
1 5 12.0
1 7 20.0
1 19 29.0
1 25 74.0
2 1 1.0
2 3 1.0
3 2 1.0
3 4 3.0
4 3 3.0
4 1 3.0
5 1 12.0
5 6 6.5
6 5 6.5
6 11 26.0
7 1 20.0
7 8 16.0
7 10 38.0
8 7 16.0
8 9 29.0
9 8 29.0
10 7 38.0
11 6 26.0
11 12 110.0
12 11 110.0
12 13 36.0
12 19 29.0
13 12 36.0
13 14 22.0
13 15 2.0
13 16 5.0
14 13 22.0
14 15 0.7
15 13 2.0
15 14 0.7
16 13 5.0
16 17 37.0
17 16 37.0
17 18 26.0
18 17 26.0
18 19 38.0
19 18 38.0
19 12 29.0
19 1 29.0
19 20 31.0
19 21 77.0
20 19 31.0
21 19 77.0
21 22 8.6
22 21 8.6
22 23 40.0
23 22 40.0
23 24 16.0
23 25 51.0
24 23 16.0
25 1 74.0
25 23 51.0
1 3 2.0
1 8 4.0
1 9 16.0
1 10 17.0
1 11 9.0
1 6 6.0
2 5 12.0
2 6 22.0
2 7 12.0
2 8 45.0
3 9 23.0
3 10 50.0
3 11 41.0
3 15 31.0
3 20 9.0
4 5 11.0
4 6 10.0
4 7 21.0
4 8 34.0
4 9 24.0
5 10 24.0
5 11 23.0
5 12 34.0
5 13 14.0
5 14 7.0
5 15 8.0
5 16 42.0
6 7 32.0
6 8 16.0
6 9 17.0
6 10 21.0
6 12 9.0
6 13 10.0
6 14 8.1
7 11 9.0
7 12 13.0
7 13 16.8
7 14 22.0
7 15 13.0
7 16 22.0
8 20 2.0
8 21 5.0
8 22 38.0
8 23 46.0
8 24 43.0
9 10 6.0
9 11 35.0
9 12 52.0
9 13 2.0
9 14 42.0
9 15 45.0
9 2 48.0
10 13 10.0
10 14 2.0
10 15 29.0
10 16 48.0
10 17 41.0
10 18 58.0
11 7 56.0
11 21 4.0
11 22 10.0
11 23 6.0
11 24 47.0
11 25 54.0
14 16 52.0
14 17 11.0
14 18 42.0
14 19 12.0
14 20 56.0
14 21 60.0
14 22 44.0
24 13 69.0
24 14 17.0
24 15 7.0
24 16 20.0
24 17 33.0
24 18 53.0
24 19 70.0
24 20 52.0
24 21 51.0
17 19 52.0
17 20 11.0
17 21 42.0
17 22 12.0
17 23 56.0
17 24 20.3
18 20 58.0
18 21 56.0
18 22 4.0
18 23 10.0
18 24 6.0
18 25 47.0
3 1 2.0
8 1 4.0
9 1 16.0
10 1 17.0
11 1 9.0
6 1 6.0
5 2 12.0
6 2 22.0
7 2 12.0
8 2 45.0
9 3 23.0
10 3 50.0
11 3 41.0
15 3 31.0
20 3 9.0
5 4 11.0
6 4 10.0
7 4 21.0
8 4 34.0
9 4 24.0
10 5 24.0
11 5 23.0
12 5 34.0
13 5 14.0
14 5 7.0
15 5 8.0
16 5 42.0
7 6 32.0
8 6 16.0
9 6 17.0
10 6 21.0
12 6 9.0
13 6 10.0
14 6 8.1
11 7 9.0
12 7 13.0
13 7 16.8
14 7 22.0
15 7 13.0
16 7 22.0
20 8 2.0
21 8 5.0
22 8 38.0
23 8 46.0
24 8 43.0
10 9 6.0
11 9 35.0
12 9 52.0
13 9 2.0
14 9 42.0
15 9 45.0
2 9 48.0
13 10 10.0
14 10 2.0
15 10 29.0
16 10 48.0
17 10 41.0
18 10 58.0
7 11 56.0
21 11 4.0
22 11 10.0
23 11 6.0
24 11 47.0
25 11 54.0
16 14 52.0
17 14 11.0
18 14 42.0
19 14 12.0
20 14 56.0
21 14 60.0
22 14 44.0
13 24 69.0
14 24 17.0
15 24 7.0
16 24 20.0
17 24 33.0
18 24 53.0
19 24 70.0
20 24 52.0
21 24 51.0
19 17 52.0
20 17 11.0
21 17 42.0
22 17 12.0
23 17 56.0
24 17 20.3
20 18 58.0
21 18 56.0
22 18 4.0
23 18 10.0
24 18 6.0
25 18 47.0
this is SFCList
网络中SFC的ID为： 
[10, 11, 12, 13, 14, 15]
总共有SFC：6
this is MigrationCostCaculation class
this is MigrationPlanEvaluation class
this is VNFMigration class
SFC初始创建模块
this is JudgeMigrationTime class
this is SFCReliabilityMonitor class
开始时间：0
---------------------这是迁移多条SFC的方法本体---------------------
sfclist = 
[10, 11, 12, 13, 14, 15]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
sfcid = 10
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
sfcid = 11
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
sfcid = 12
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
sfcid = 14
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
sfcid = 15
sortedSFClist = 
[(15, 0.5070579264), (14, 0.63960608), (10, 0.66177), (11, 0.66177), (12, 0.7953399999999999)]
SFC的ID为：15
SFC的ID为：14
SFC的ID为：10
SFC的ID为：11
SFC的ID为：12
过载节点的集合有：
[]
没有节点过载
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
第7.1步
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 100000095.000000
更新物理节点为：1
new nodelist = 
[2, 17, 18, 19, 1]
迁移之后的时延为： 1000093.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 1
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 200000190.000000
更新物理节点为：3
new nodelist = 
[2, 17, 18, 19, 3]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 3
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 300000285.000000
更新物理节点为：4
new nodelist = 
[2, 17, 18, 19, 4]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 4
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 400000380.000000
更新物理节点为：5
new nodelist = 
[2, 17, 18, 19, 5]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 5
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 500000475.000000
更新物理节点为：6
new nodelist = 
[2, 17, 18, 19, 6]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 600000570.000000
更新物理节点为：7
new nodelist = 
[2, 17, 18, 19, 7]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 7
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 700000665.000000
更新物理节点为：8
new nodelist = 
[2, 17, 18, 19, 8]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 800000760.000000
更新物理节点为：9
new nodelist = 
[2, 17, 18, 19, 9]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 9
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 900000855.000000
更新物理节点为：10
new nodelist = 
[2, 17, 18, 19, 10]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 10
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1000000950.000000
更新物理节点为：11
new nodelist = 
[2, 17, 18, 19, 11]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 11
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1100001045.000000
更新物理节点为：12
new nodelist = 
[2, 17, 18, 19, 12]
迁移之后的时延为： 1000093.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 12
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1200001140.000000
更新物理节点为：13
new nodelist = 
[2, 17, 18, 19, 13]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 13
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1300001235.000000
更新物理节点为：14
new nodelist = 
[2, 17, 18, 19, 14]
迁移之后的时延为： 1000076.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 14
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1400001330.000000
更新物理节点为：15
new nodelist = 
[2, 17, 18, 19, 15]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 15
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1500001425.000000
更新物理节点为：16
new nodelist = 
[2, 17, 18, 19, 16]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 16
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1600001520.000000
更新物理节点为：21
new nodelist = 
[2, 17, 18, 19, 21]
迁移之后的时延为： 1000141.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 21
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1700001615.000000
更新物理节点为：22
new nodelist = 
[2, 17, 18, 19, 22]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1800001710.000000
更新物理节点为：23
new nodelist = 
[2, 17, 18, 19, 23]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 1900001805.000000
更新物理节点为：24
new nodelist = 
[2, 17, 18, 19, 24]
迁移之后的时延为： 1000134.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2000001900.000000
更新物理节点为：25
new nodelist = 
[2, 17, 18, 19, 25]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2100001976.000000
更新物理节点为：1
new nodelist = 
[2, 8, 19, 1]
迁移之后的时延为： 1000074.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 1
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2200002052.000000
更新物理节点为：3
new nodelist = 
[2, 8, 19, 3]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 3
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2300002128.000000
更新物理节点为：4
new nodelist = 
[2, 8, 19, 4]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 4
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2400002204.000000
更新物理节点为：5
new nodelist = 
[2, 8, 19, 5]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 5
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2500002280.000000
更新物理节点为：6
new nodelist = 
[2, 8, 19, 6]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2600002356.000000
更新物理节点为：7
new nodelist = 
[2, 8, 19, 7]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 7
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2700002432.000000
更新物理节点为：9
new nodelist = 
[2, 8, 19, 9]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 9
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2800002508.000000
更新物理节点为：10
new nodelist = 
[2, 8, 19, 10]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 10
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 2900002584.000000
更新物理节点为：11
new nodelist = 
[2, 8, 19, 11]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 11
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3000002660.000000
更新物理节点为：12
new nodelist = 
[2, 8, 19, 12]
迁移之后的时延为： 1000074.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 12
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3100002736.000000
更新物理节点为：13
new nodelist = 
[2, 8, 19, 13]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 13
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3200002812.000000
更新物理节点为：14
new nodelist = 
[2, 8, 19, 14]
迁移之后的时延为： 1000057.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 14
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3300002888.000000
更新物理节点为：15
new nodelist = 
[2, 8, 19, 15]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 15
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3400002964.000000
更新物理节点为：16
new nodelist = 
[2, 8, 19, 16]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 16
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3500003040.000000
更新物理节点为：17
new nodelist = 
[2, 8, 19, 17]
迁移之后的时延为： 1000097.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 17
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3600003116.000000
更新物理节点为：18
new nodelist = 
[2, 8, 19, 18]
迁移之后的时延为： 1000083.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 18
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3700003192.000000
更新物理节点为：21
new nodelist = 
[2, 8, 19, 21]
迁移之后的时延为： 1000122.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 21
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3800003268.000000
更新物理节点为：22
new nodelist = 
[2, 8, 19, 22]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 3900003344.000000
更新物理节点为：23
new nodelist = 
[2, 8, 19, 23]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4000003420.000000
更新物理节点为：24
new nodelist = 
[2, 8, 19, 24]
迁移之后的时延为： 1000115.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4100003496.000000
更新物理节点为：25
new nodelist = 
[2, 8, 19, 25]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4200003507.000000
更新物理节点为：6
new nodelist = 
[2, 4, 6]
迁移之后的时延为： 1000010.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4300003518.000000
更新物理节点为：8
new nodelist = 
[2, 4, 8]
迁移之后的时延为： 1000034.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4400003529.000000
更新物理节点为：22
new nodelist = 
[2, 4, 22]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4500003540.000000
更新物理节点为：23
new nodelist = 
[2, 4, 23]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4600003551.000000
更新物理节点为：24
new nodelist = 
[2, 4, 24]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4700003562.000000
更新物理节点为：25
new nodelist = 
[2, 4, 25]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[6, 8, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4800003586.000000
更新物理节点为：6
new nodelist = 
[2, 4, 6]
迁移之后的时延为： 1000010.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 4900003610.000000
更新物理节点为：8
new nodelist = 
[2, 4, 8]
迁移之后的时延为： 1000034.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5000003634.000000
更新物理节点为：22
new nodelist = 
[2, 4, 22]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5100003658.000000
更新物理节点为：23
new nodelist = 
[2, 4, 23]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5200003682.000000
更新物理节点为：24
new nodelist = 
[2, 4, 24]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5300003706.000000
更新物理节点为：25
new nodelist = 
[2, 4, 25]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[6, 8, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 2
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300003771.000000
更新物理节点为：2
new nodelist = 
[3, 9, 2]
迁移之后的时延为： 71.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 2
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300003836.000000
更新物理节点为：6
new nodelist = 
[3, 9, 6]
迁移之后的时延为： 40.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300003901.000000
更新物理节点为：7
new nodelist = 
[3, 9, 7]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 7
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300003966.000000
更新物理节点为：8
new nodelist = 
[3, 9, 8]
迁移之后的时延为： 52.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004031.000000
更新物理节点为：10
new nodelist = 
[3, 9, 10]
迁移之后的时延为： 29.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 10
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004096.000000
更新物理节点为：12
new nodelist = 
[3, 9, 12]
迁移之后的时延为： 75.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 12
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004161.000000
更新物理节点为：13
new nodelist = 
[3, 9, 13]
迁移之后的时延为： 25.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 13
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004226.000000
更新物理节点为：15
new nodelist = 
[3, 9, 15]
迁移之后的时延为： 68.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 15
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004291.000000
更新物理节点为：18
new nodelist = 
[3, 9, 18]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 18
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004356.000000
更新物理节点为：19
new nodelist = 
[3, 9, 19]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 19
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004421.000000
更新物理节点为：20
new nodelist = 
[3, 9, 20]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 20
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004486.000000
更新物理节点为：21
new nodelist = 
[3, 9, 21]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 21
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004551.000000
更新物理节点为：22
new nodelist = 
[3, 9, 22]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004616.000000
更新物理节点为：23
new nodelist = 
[3, 9, 23]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004681.000000
更新物理节点为：24
new nodelist = 
[3, 9, 24]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 5300004746.000000
更新物理节点为：25
new nodelist = 
[3, 9, 25]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[2, 6, 7, 8, 10, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25]
第7.2步
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5400004841.000000
更新物理节点为：1
new nodelist = 
[2, 17, 18, 19, 1]
迁移之后的时延为： 1000093.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 1
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5500004936.000000
更新物理节点为：3
new nodelist = 
[2, 17, 18, 19, 3]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 3
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5600005031.000000
更新物理节点为：4
new nodelist = 
[2, 17, 18, 19, 4]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 4
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5700005126.000000
更新物理节点为：5
new nodelist = 
[2, 17, 18, 19, 5]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 5
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5800005221.000000
更新物理节点为：6
new nodelist = 
[2, 17, 18, 19, 6]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 5900005316.000000
更新物理节点为：7
new nodelist = 
[2, 17, 18, 19, 7]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 7
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6000005411.000000
更新物理节点为：8
new nodelist = 
[2, 17, 18, 19, 8]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6100005506.000000
更新物理节点为：9
new nodelist = 
[2, 17, 18, 19, 9]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 9
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6200005601.000000
更新物理节点为：10
new nodelist = 
[2, 17, 18, 19, 10]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 10
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6300005696.000000
更新物理节点为：11
new nodelist = 
[2, 17, 18, 19, 11]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 11
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6400005791.000000
更新物理节点为：12
new nodelist = 
[2, 17, 18, 19, 12]
迁移之后的时延为： 1000093.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 12
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6500005886.000000
更新物理节点为：13
new nodelist = 
[2, 17, 18, 19, 13]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 13
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6600005981.000000
更新物理节点为：14
new nodelist = 
[2, 17, 18, 19, 14]
迁移之后的时延为： 1000076.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 14
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6700006076.000000
更新物理节点为：15
new nodelist = 
[2, 17, 18, 19, 15]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 15
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6800006171.000000
更新物理节点为：16
new nodelist = 
[2, 17, 18, 19, 16]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 16
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 6900006266.000000
更新物理节点为：21
new nodelist = 
[2, 17, 18, 19, 21]
迁移之后的时延为： 1000141.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 21
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7000006361.000000
更新物理节点为：22
new nodelist = 
[2, 17, 18, 19, 22]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7100006456.000000
更新物理节点为：23
new nodelist = 
[2, 17, 18, 19, 23]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7200006551.000000
更新物理节点为：24
new nodelist = 
[2, 17, 18, 19, 24]
迁移之后的时延为： 1000134.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 17, 18, 19, 20]
nodeid = 2
nodeid = 17
nodeid = 18
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 17, 18, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 17, 18, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7300006646.000000
更新物理节点为：25
new nodelist = 
[2, 17, 18, 19, 25]
迁移之后的时延为： 2000064.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7400006722.000000
更新物理节点为：1
new nodelist = 
[2, 8, 19, 1]
迁移之后的时延为： 1000074.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 1
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7500006798.000000
更新物理节点为：3
new nodelist = 
[2, 8, 19, 3]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 3
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7600006874.000000
更新物理节点为：4
new nodelist = 
[2, 8, 19, 4]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 4
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7700006950.000000
更新物理节点为：5
new nodelist = 
[2, 8, 19, 5]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 5
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7800007026.000000
更新物理节点为：6
new nodelist = 
[2, 8, 19, 6]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 7900007102.000000
更新物理节点为：7
new nodelist = 
[2, 8, 19, 7]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 7
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8000007178.000000
更新物理节点为：9
new nodelist = 
[2, 8, 19, 9]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 9
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8100007254.000000
更新物理节点为：10
new nodelist = 
[2, 8, 19, 10]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 10
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8200007330.000000
更新物理节点为：11
new nodelist = 
[2, 8, 19, 11]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 11
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8300007406.000000
更新物理节点为：12
new nodelist = 
[2, 8, 19, 12]
迁移之后的时延为： 1000074.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 12
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8400007482.000000
更新物理节点为：13
new nodelist = 
[2, 8, 19, 13]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 13
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8500007558.000000
更新物理节点为：14
new nodelist = 
[2, 8, 19, 14]
迁移之后的时延为： 1000057.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 14
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8600007634.000000
更新物理节点为：15
new nodelist = 
[2, 8, 19, 15]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 15
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8700007710.000000
更新物理节点为：16
new nodelist = 
[2, 8, 19, 16]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 16
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8800007786.000000
更新物理节点为：17
new nodelist = 
[2, 8, 19, 17]
迁移之后的时延为： 1000097.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 17
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 8900007862.000000
更新物理节点为：18
new nodelist = 
[2, 8, 19, 18]
迁移之后的时延为： 1000083.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 18
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9000007938.000000
更新物理节点为：21
new nodelist = 
[2, 8, 19, 21]
迁移之后的时延为： 1000122.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 21
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9100008014.000000
更新物理节点为：22
new nodelist = 
[2, 8, 19, 22]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9200008090.000000
更新物理节点为：23
new nodelist = 
[2, 8, 19, 23]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9300008166.000000
更新物理节点为：24
new nodelist = 
[2, 8, 19, 24]
迁移之后的时延为： 1000115.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 8, 19, 20]
nodeid = 2
nodeid = 8
nodeid = 19
nodeid = 20
此SFC上的VNF所在的物理节点列表为：
[2, 8, 19, 20]
vnfid = 20
vnfListSingelton.dict_VNFReliability[5] = 0.860000
nfvid = 20
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.860000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.720000
[2, 8, 19, 20]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9400008242.000000
更新物理节点为：25
new nodelist = 
[2, 8, 19, 25]
迁移之后的时延为： 2000045.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9500008253.000000
更新物理节点为：6
new nodelist = 
[2, 4, 6]
迁移之后的时延为： 1000010.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9600008264.000000
更新物理节点为：8
new nodelist = 
[2, 4, 8]
迁移之后的时延为： 1000034.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9700008275.000000
更新物理节点为：22
new nodelist = 
[2, 4, 22]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9800008286.000000
更新物理节点为：23
new nodelist = 
[2, 4, 23]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 9900008297.000000
更新物理节点为：24
new nodelist = 
[2, 4, 24]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 5]
nodeid = 2
nodeid = 4
nodeid = 5
此SFC上的VNF所在的物理节点列表为：
[2, 4, 5]
vnfid = 5
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 5
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.750000
[2, 4, 5]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10000008308.000000
更新物理节点为：25
new nodelist = 
[2, 4, 25]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[6, 8, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10100008332.000000
更新物理节点为：6
new nodelist = 
[2, 4, 6]
迁移之后的时延为： 1000010.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10200008356.000000
更新物理节点为：8
new nodelist = 
[2, 4, 8]
迁移之后的时延为： 1000034.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 14
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10300008380.000000
更新物理节点为：22
new nodelist = 
[2, 4, 22]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10400008404.000000
更新物理节点为：23
new nodelist = 
[2, 4, 23]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10500008428.000000
更新物理节点为：24
new nodelist = 
[2, 4, 24]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[2, 4, 9]
nodeid = 2
nodeid = 4
nodeid = 9
此SFC上的VNF所在的物理节点列表为：
[2, 4, 9]
vnfid = 9
vnfListSingelton.dict_VNFReliability[5] = 0.950000
nfvid = 9
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.950000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.790000
[2, 4, 9]
SFC的新的可靠性为：0.940000
约束1满足
约束1满足
迁移之前的时延： 10600008452.000000
更新物理节点为：25
new nodelist = 
[2, 4, 25]
迁移之后的时延为： 2000000.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[6, 8, 22, 23, 24, 25]
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 2
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008517.000000
更新物理节点为：2
new nodelist = 
[3, 9, 2]
迁移之后的时延为： 71.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 2
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008582.000000
更新物理节点为：6
new nodelist = 
[3, 9, 6]
迁移之后的时延为： 40.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008647.000000
更新物理节点为：7
new nodelist = 
[3, 9, 7]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 7
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008712.000000
更新物理节点为：8
new nodelist = 
[3, 9, 8]
迁移之后的时延为： 52.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 8
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008777.000000
更新物理节点为：10
new nodelist = 
[3, 9, 10]
迁移之后的时延为： 29.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 10
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 12
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008842.000000
更新物理节点为：12
new nodelist = 
[3, 9, 12]
迁移之后的时延为： 75.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 12
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 13
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008907.000000
更新物理节点为：13
new nodelist = 
[3, 9, 13]
迁移之后的时延为： 25.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 13
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 15
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600008972.000000
更新物理节点为：15
new nodelist = 
[3, 9, 15]
迁移之后的时延为： 68.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 15
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009037.000000
更新物理节点为：18
new nodelist = 
[3, 9, 18]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 18
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009102.000000
更新物理节点为：19
new nodelist = 
[3, 9, 19]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 19
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009167.000000
更新物理节点为：20
new nodelist = 
[3, 9, 20]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 20
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009232.000000
更新物理节点为：21
new nodelist = 
[3, 9, 21]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 21
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009297.000000
更新物理节点为：22
new nodelist = 
[3, 9, 22]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 22
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009362.000000
更新物理节点为：23
new nodelist = 
[3, 9, 23]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 23
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009427.000000
更新物理节点为：24
new nodelist = 
[3, 9, 24]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[3, 9, 14]
nodeid = 3
nodeid = 9
nodeid = 14
此SFC上的VNF所在的物理节点列表为：
[3, 9, 14]
vnfid = 14
vnfListSingelton.dict_VNFReliability[5] = 0.920000
nfvid = 14
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.920000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.820000
[3, 9, 14]
SFC的新的可靠性为：0.920000
约束1满足
约束1满足
迁移之前的时延： 10600009492.000000
更新物理节点为：25
new nodelist = 
[3, 9, 25]
迁移之后的时延为： 1000023.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 25
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[2, 6, 7, 8, 10, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25]
第7.3步
这是getMigrationPlan方法，vnfList和desList分别为：
[20, 20, 5, 9, 14]
[[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25], [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25], [6, 8, 22, 23, 24, 25], [6, 8, 22, 23, 24, 25], [2, 6, 7, 8, 10, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25]]
finalNodeIdList = 
[8, 3, 6, 6, 15]
这是getMigrationPlan方法，vnfList和desList分别为：
[20, 20, 5, 9, 14]
[[1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25], [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25], [6, 8, 22, 23, 24, 25], [6, 8, 22, 23, 24, 25], [2, 6, 7, 8, 10, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25]]
finalNodeIdList = 
[8, 3, 6, 6, 15]
VNFWithMinReliaPlan = 
[8, 3, 6, 6, 15]
VNFWithMaxFlowPlan = 
[8, 3, 6, 6, 15]
第8步
VNFWithMinReliaPlan = 
[8, 3, 6, 6, 15]
migVNFWithMinReliaList = 
[20, 20, 5, 9, 14]
i = 0
delayBefore = 10700009587
VNFWithMinReliaPlan[i] = 8
!= 1
VNFWithMinReliaPlan组 des_list = 
[8]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[20]
destinationPhysicalNodeList = 
[8]
migrationTime = 1.671777
[2, 17, 18, 19, 20]
SFCDelayAfterMigration = 10800009682.000000
SFCDelayBeforMigration = 10700009587.000000
100000095.0
delayIncreationOfSFC = 100000095.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.065444
additionnalCost = 0.000000
cost = 100000096.737221
i = 1
delayBefore = 10900009758
VNFWithMinReliaPlan[i] = 3
!= 1
VNFWithMinReliaPlan组 des_list = 
[3]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[20]
destinationPhysicalNodeList = 
[3]
migrationTime = 6.186188
[2, 8, 19, 20]
SFCDelayAfterMigration = 11000009834.000000
SFCDelayBeforMigration = 10900009758.000000
100000076.0
delayIncreationOfSFC = 100000076.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.069948
additionnalCost = 0.000000
cost = 100000082.256136
i = 2
delayBefore = 11100009845
VNFWithMinReliaPlan[i] = 6
!= 1
VNFWithMinReliaPlan组 des_list = 
[6]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[5]
destinationPhysicalNodeList = 
[6]
migrationTime = 3.904903
[2, 4, 5]
before node id = 5
SFCDelayAfterMigration = 11200009856.000000
SFCDelayBeforMigration = 11100009845.000000
100000011.0
delayIncreationOfSFC = 100000011.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.071150
additionnalCost = 0.000000
cost = 100000014.976053
i = 3
delayBefore = 11300009880
VNFWithMinReliaPlan[i] = 6
!= 1
VNFWithMinReliaPlan组 des_list = 
[6]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[9]
destinationPhysicalNodeList = 
[6]
migrationTime = 14.769430
[2, 4, 9]
SFCDelayAfterMigration = 11400009904.000000
SFCDelayBeforMigration = 11300009880.000000
100000024.0
delayIncreationOfSFC = 100000024.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.078842
additionnalCost = 0.000000
cost = 100000038.848272
i = 4
delayBefore = 11400009969
VNFWithMinReliaPlan[i] = 15
!= 1
VNFWithMinReliaPlan组 des_list = 
[15]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[14]
destinationPhysicalNodeList = 
[15]
migrationTime = 0.572991
[3, 9, 14]
SFCDelayAfterMigration = 11400010034.000000
SFCDelayBeforMigration = 11400009969.000000
65.0
delayIncreationOfSFC = 65.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.094887
additionnalCost = 0.000000
cost = 65.667878
migVNFWithMaxFlowList1 = 
[20, 20, 5, 9, 14]
VNFWithMaxFlowPlan = 
[8, 3, 6, 6, 15]
VNFWithMaxFlowPlan[i] = 8
VNFWithMaxFlowPlan组 554行，des_list1 = 
[8]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[20]
destinationPhysicalNodeList = 
[8]
migrationTime = 1.243974
[2, 17, 18, 19, 20]
SFCDelayAfterMigration = 11600010224.000000
SFCDelayBeforMigration = 11500010129.000000
100000095.0
delayIncreationOfSFC = 100000095.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.061522
additionnalCost = 0.000000
cost = 100000096.305496
VNFWithMaxFlowPlan[i] = 3
VNFWithMaxFlowPlan组 554行，des_list1 = 
[3]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[20]
destinationPhysicalNodeList = 
[3]
migrationTime = 6.669241
[2, 8, 19, 20]
SFCDelayAfterMigration = 11800010376.000000
SFCDelayBeforMigration = 11700010300.000000
100000076.0
delayIncreationOfSFC = 100000076.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.062990
additionnalCost = 0.000000
cost = 100000082.732231
VNFWithMaxFlowPlan[i] = 6
VNFWithMaxFlowPlan组 554行，des_list1 = 
[6]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[5]
destinationPhysicalNodeList = 
[6]
migrationTime = 5.758049
[2, 4, 5]
before node id = 5
SFCDelayAfterMigration = 12000010398.000000
SFCDelayBeforMigration = 11900010387.000000
100000011.0
delayIncreationOfSFC = 100000011.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.103978
additionnalCost = 0.000000
cost = 100000016.862028
VNFWithMaxFlowPlan[i] = 6
VNFWithMaxFlowPlan组 554行，des_list1 = 
[6]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[9]
destinationPhysicalNodeList = 
[6]
migrationTime = 12.914933
[2, 4, 9]
SFCDelayAfterMigration = 12200010446.000000
SFCDelayBeforMigration = 12100010422.000000
100000024.0
delayIncreationOfSFC = 100000024.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.085576
additionnalCost = 0.000000
cost = 100000037.000509
VNFWithMaxFlowPlan[i] = 15
VNFWithMaxFlowPlan组 554行，des_list1 = 
[15]
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 5
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 5
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 0.661770
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 4
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 4
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
SFC的新的可靠性为：0.661770
totalRelibility = 1.323540
nfvid = 3
self.VNF_reliability = 0
VNF的可靠性为： 0.910000
nfvid = 3
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
SFC的新的可靠性为：0.795340
totalRelibility = 2.118880
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
SFC的新的可靠性为：0.883186
totalRelibility = 3.002066
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.639606
totalRelibility = 3.641672
nfvid = 2
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 2
self.VNF_reliability = 0
nfvid = 17
self.VNF_reliability = 0
VNF的可靠性为： 0.810000
nfvid = 17
self.VNF_reliability = 0
nfvid = 18
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 18
self.VNF_reliability = 0
nfvid = 19
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 19
self.VNF_reliability = 0
nfvid = 20
self.VNF_reliability = 0
VNF的可靠性为： 0.860000
nfvid = 20
self.VNF_reliability = 0
SFC的新的可靠性为：0.507058
totalRelibility = 4.148730
needMigratedVNFList = 
[14]
destinationPhysicalNodeList = 
[15]
migrationTime = 0.603513
[3, 9, 14]
SFCDelayAfterMigration = 12200010576.000000
SFCDelayBeforMigration = 12200010511.000000
65.0
delayIncreationOfSFC = 65.000000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.055735
additionnalCost = 0.000000
cost = 65.659248
migVNFWithMinReliaOnSFCIdList = 
[15, 14, 10, 11, 12]
迁移结束，迁移方案以及迁移的VNF为：
[15]
[20, 20, 5, 9, 14]
迁移的SFC为： 12
8 plus
此VNF占用的CPU = 17
此VNF占用的内存 = 34
vnf_id = 20
此VNF迁移之前所在的物理节点为：20
此VNF迁移之后所在的物理节点为：15
Traceback (most recent call last):
  File "D:/pycharm workspace/GraduationProject/main/main.py", line 62, in <module>
读取文件第i行 0 
读取文件第i行 1 
读取文件第i行 2 
读取文件第i行 3 
读取文件第i行 4 
读取文件第i行 5 
读取文件第i行 6 
读取文件第i行 7 
读取文件第i行 8 
读取文件第i行 9 
读取文件第i行 10 
读取文件第i行 11 
读取文件第i行 12 
读取文件第i行 13 
读取文件第i行 14 
迁移后的物理节点所在的行为： 14
读取文件第i行 15 
读取文件第i行 16 
读取文件第i行 17 
读取文件第i行 18 
读取文件第i行 19 
迁移前的node id 所在的行为：19
node_CPU_before = 127
node_memo_before = 161
读取文件第i行 20 
读取文件第i行 21 
读取文件第i行 22 
读取文件第i行 23 
读取文件第i行 24 
node_CPU_before = 144
node_memo_before = 195
至此，VNF迁移导致的物理机的资源的修改已经完成
迁移之后的物理节点为： 15
    migration.migrateVNFsofMultiSFCIterator()
  File "D:\pycharm workspace\GraduationProject\migration\VNFMigration.py", line 247, in migrateVNFsofMultiSFCIterator
    (plan, VNFs, SFCs) = self.migrateVNFsofMultiSFC(sortedSFClist)
  File "D:\pycharm workspace\GraduationProject\migration\VNFMigration.py", line 647, in migrateVNFsofMultiSFC
    node_after_id = outPutPlan[i]
IndexError: list index out of range

Process finished with exit code 1
