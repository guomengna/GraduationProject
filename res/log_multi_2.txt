使用的SFClist文件为：topo/allSFCList_2.xlsx

C:\python3.7\python.exe "D:/pycharm workspace/GraduationProject/main/main.py"
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
{1: 85.0, 2: 72.0, 3: 88.0, 4: 73.0, 5: 88.0, 6: 87.0, 7: 90.0, 8: 77.0, 9: 66.0, 10: 73.0, 11: 93.0, 12: 72.0, 13: 91.0, 14: 65.0, 15: 93.0, 16: 86.0, 17: 72.0, 18: 73.0, 19: 73.0, 20: 93.0, 21: 83.0, 22: 68.0, 23: 84.0, 24: 100.0, 25: 85.0}
{1: 85.0, 2: 72.0, 3: 88.0, 4: 73.0, 5: 88.0, 6: 87.0, 7: 90.0, 8: 77.0, 9: 66.0, 10: 73.0, 11: 93.0, 12: 72.0, 13: 91.0, 14: 65.0, 15: 93.0, 16: 86.0, 17: 72.0, 18: 73.0, 19: 73.0, 20: 93.0, 21: 83.0, 22: 68.0, 23: 84.0, 24: 100.0, 25: 85.0}
dict_provided_reliablity = 
{1: 0.92, 2: 0.94, 3: 0.92, 4: 0.9, 5: 0.9, 6: 0.99, 7: 0.94, 8: 0.99, 9: 0.92, 10: 0.95, 11: 0.9, 12: 0.95, 13: 0.94, 14: 0.92, 15: 0.93, 16: 0.92, 17: 0.92, 18: 0.95, 19: 0.93, 20: 0.95, 21: 0.95, 22: 0.96, 23: 0.99, 24: 0.99, 25: 0.99}
This is VMList class.
allVNFCount = 30
activeVNFCount = 30
this is the SFC.class
1 2 1.0
1 4 3.0
1 5 12.0
1 7 20.0
1 19 29.0
1 25 74.0
2 1 1.0
2 3 1.0
3 2 1.0
3 4 3.0
4 3 3.0
4 1 3.0
5 1 12.0
5 6 6.5
6 5 6.5
6 11 26.0
7 1 20.0
7 8 16.0
7 10 38.0
8 7 16.0
8 9 29.0
9 8 29.0
10 7 38.0
11 6 26.0
11 12 110.0
12 11 110.0
12 13 36.0
12 19 29.0
13 12 36.0
13 14 22.0
13 15 2.0
13 16 5.0
14 13 22.0
14 15 0.7
15 13 2.0
15 14 0.7
16 13 5.0
16 17 37.0
17 16 37.0
17 18 26.0
18 17 26.0
18 19 38.0
19 18 38.0
19 12 29.0
19 1 29.0
19 20 31.0
19 21 77.0
20 19 31.0
21 19 77.0
21 22 8.6
22 21 8.6
22 23 40.0
23 22 40.0
23 24 16.0
23 25 51.0
24 23 16.0
25 1 74.0
25 23 51.0
1 3 2.0
1 8 4.0
1 9 16.0
1 10 17.0
1 11 9.0
1 6 6.0
2 5 12.0
2 6 22.0
2 7 12.0
2 8 45.0
3 9 23.0
3 10 50.0
3 11 41.0
3 15 31.0
3 20 9.0
4 5 11.0
4 6 10.0
4 7 21.0
4 8 34.0
4 9 24.0
5 10 24.0
5 11 23.0
5 12 34.0
5 13 14.0
5 14 7.0
5 15 8.0
5 16 42.0
6 7 32.0
6 8 16.0
6 9 17.0
6 10 21.0
6 12 9.0
6 13 10.0
6 14 8.1
7 11 9.0
7 12 13.0
7 13 16.8
7 14 22.0
7 15 13.0
7 16 22.0
8 20 2.0
8 21 5.0
8 22 38.0
8 23 46.0
8 24 43.0
9 10 6.0
9 11 35.0
9 12 52.0
9 13 2.0
9 14 42.0
9 15 45.0
9 2 48.0
10 13 10.0
10 14 2.0
10 15 29.0
10 16 48.0
10 17 41.0
10 18 58.0
11 7 56.0
11 21 4.0
11 22 10.0
11 23 6.0
11 24 47.0
11 25 54.0
14 16 52.0
14 17 11.0
14 18 42.0
14 19 12.0
14 20 56.0
14 21 60.0
14 22 44.0
24 13 69.0
24 14 17.0
24 15 7.0
24 16 20.0
24 17 33.0
24 18 53.0
24 19 70.0
24 20 52.0
24 21 51.0
17 19 52.0
17 20 11.0
17 21 42.0
17 22 12.0
17 23 56.0
17 24 20.3
18 20 58.0
18 21 56.0
18 22 4.0
18 23 10.0
18 24 6.0
18 25 47.0
3 1 2.0
8 1 4.0
9 1 16.0
10 1 17.0
11 1 9.0
6 1 6.0
5 2 12.0
6 2 22.0
7 2 12.0
8 2 45.0
9 3 23.0
10 3 50.0
11 3 41.0
15 3 31.0
20 3 9.0
5 4 11.0
6 4 10.0
7 4 21.0
8 4 34.0
9 4 24.0
10 5 24.0
11 5 23.0
12 5 34.0
13 5 14.0
14 5 7.0
15 5 8.0
16 5 42.0
7 6 32.0
8 6 16.0
9 6 17.0
10 6 21.0
12 6 9.0
13 6 10.0
14 6 8.1
11 7 9.0
12 7 13.0
13 7 16.8
14 7 22.0
15 7 13.0
16 7 22.0
20 8 2.0
21 8 5.0
22 8 38.0
23 8 46.0
24 8 43.0
10 9 6.0
11 9 35.0
12 9 52.0
13 9 2.0
14 9 42.0
15 9 45.0
2 9 48.0
13 10 10.0
14 10 2.0
15 10 29.0
16 10 48.0
17 10 41.0
18 10 58.0
7 11 56.0
21 11 4.0
22 11 10.0
23 11 6.0
24 11 47.0
25 11 54.0
16 14 52.0
17 14 11.0
18 14 42.0
19 14 12.0
20 14 56.0
21 14 60.0
22 14 44.0
13 24 69.0
14 24 17.0
15 24 7.0
16 24 20.0
17 24 33.0
18 24 53.0
19 24 70.0
20 24 52.0
21 24 51.0
19 17 52.0
20 17 11.0
21 17 42.0
22 17 12.0
23 17 56.0
24 17 20.3
20 18 58.0
21 18 56.0
22 18 4.0
23 18 10.0
24 18 6.0
25 18 47.0
this is SFCList
网络中SFC的ID为： 
[4, 5, 6]
总共有SFC：3
this is MigrationCostCaculation class
this is MigrationPlanEvaluation class
this is VNFMigration class
SFC初始创建模块
this is JudgeMigrationTime class
this is SFCReliabilityMonitor class
开始时间：0
---------------------这是迁移多条SFC的方法本体---------------------
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
SFC的新的可靠性为：0.929669
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
nfvid = 11
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 11
self.VNF_reliability = 0
SFC的新的可靠性为：0.839420
nfvid = 12
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 12
self.VNF_reliability = 0
nfvid = 13
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 13
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
nfvid = 15
self.VNF_reliability = 0
VNF的可靠性为： 0.970000
nfvid = 15
self.VNF_reliability = 0
SFC的新的可靠性为：0.805391
SFC的ID为：6
过载节点的集合有：
[]
没有节点过载
nfvid = 12
self.VNF_reliability = 0
nfvid = 13
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
nfvid = 15
self.VNF_reliability = 0
第7.1步
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 2
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 58.700000
更新物理节点为：6
new nodelist = 
[12, 13, 14, 6]
迁移之后的时延为： 66.100000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 117.400000
更新物理节点为：8
new nodelist = 
[12, 13, 14, 8]
迁移之后的时延为： 1000058.000000
约束2不满足
False
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
约束1不满足
False
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 176.100000
更新物理节点为：23
new nodelist = 
[12, 13, 14, 23]
迁移之后的时延为： 1000058.000000
约束2不满足
False
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 234.800000
更新物理节点为：24
new nodelist = 
[12, 13, 14, 24]
迁移之后的时延为： 75.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 293.500000
更新物理节点为：25
new nodelist = 
[12, 13, 14, 25]
迁移之后的时延为： 1000058.000000
约束2不满足
False
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[6, 24]
第7.2步
这是为VNF计算迁移目的地的方法本体：
nodeIdList = 
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
nodeid = 1
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 1
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 2
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 2
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 3
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 3
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 4
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 4
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 5
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 5
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 6
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 6
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 352.200000
更新物理节点为：6
new nodelist = 
[12, 13, 14, 6]
迁移之后的时延为： 66.100000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 6
nodeid = 7
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 7
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.94
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.94
迁移之后的可靠性：0.940000
约束1不满足
False
nodeid = 8
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 8
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 410.900000
更新物理节点为：8
new nodelist = 
[12, 13, 14, 8]
迁移之后的时延为： 1000058.000000
约束2不满足
False
nodeid = 9
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 9
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 10
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 10
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 11
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 11
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.9
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.9
迁移之后的可靠性：0.900000
约束1不满足
False
nodeid = 12
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 13
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 14
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 15
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
不能迁移到同意条SFC所在的物理节点上
False
nodeid = 16
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 16
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 17
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 17
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.92
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.92
迁移之后的可靠性：0.920000
约束1不满足
False
nodeid = 18
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 18
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 19
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 19
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.93
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.93
迁移之后的可靠性：0.930000
约束1不满足
False
nodeid = 20
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 20
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 21
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 21
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.95
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.95
迁移之后的可靠性：0.950000
约束1不满足
False
nodeid = 22
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 22
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.96
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.96
迁移之后的可靠性：0.960000
约束1不满足
False
nodeid = 23
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 23
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 469.600000
更新物理节点为：23
new nodelist = 
[12, 13, 14, 23]
迁移之后的时延为： 1000058.000000
约束2不满足
False
nodeid = 24
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 24
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 528.300000
更新物理节点为：24
new nodelist = 
[12, 13, 14, 24]
迁移之后的时延为： 75.000000
约束2满足
约束2满足
约束3满足
约束3满足
满足迁移条件，返回true
约束4满足
True
node 将被加入此VNF的迁移目的地中 24
nodeid = 25
判断某个物理节点是否是某个VNF迁移的目的地方法本体
判断约束条件1是是否满足方法本体
待迁移SFC上的VNF列表为：
[12, 13, 14, 15]
nodeid = 12
nodeid = 13
nodeid = 14
nodeid = 15
此SFC上的VNF所在的物理节点列表为：
[12, 13, 14, 15]
vnfid = 15
vnfListSingelton.dict_VNFReliability[5] = 0.970000
nfvid = 15
self.VNF_reliability = 0
迁移之前此VNF的可靠性 0.970000
获取物理节点可靠性的方法本体
NodeId = 25
nodeListSingelton.dict_provided_reliablity[NodeId] = 
0.99
判断物理节点是否过载方法本体
resourceOverload = 
False
这是物理节点类159行，overloadeState = 
False
不过载，物理节点的可靠性为：
0.99
迁移之后的可靠性：0.990000
满足约束1.1， 开始判断约束1.2
requestSFCReliability = 0.950000
[12, 13, 14, 15]
SFC的新的可靠性为：0.950000
约束1满足
约束1满足
迁移之前的时延： 587.000000
更新物理节点为：25
new nodelist = 
[12, 13, 14, 25]
迁移之后的时延为： 1000058.000000
约束2不满足
False
////////////////////////////这是为VNF计算迁移目的地的方法本体：allsatidfiedNodeList = 
[6, 24]
第7.3步
这是getMigrationPlan方法，vnfList和desList分别为：
[15]
[[6, 24]]
finalNodeIdList = 
[24]
这是getMigrationPlan方法，vnfList和desList分别为：
[15]
[[6, 24]]
finalNodeIdList = 
[24]
VNFWithMinReliaPlan = 
[24]
VNFWithMaxFlowPlan = 
[24]
第8步
VNFWithMinReliaPlan = 
[24]
migVNFWithMinReliaList = 
[15]
i = 0
delayBefore = 645
VNFWithMinReliaPlan[i] = 24
!= 1
VNFWithMinReliaPlan组 des_list = 
[24]
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
SFC的新的可靠性为：0.929669
totalRelibility = 0.929669
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
nfvid = 11
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 11
self.VNF_reliability = 0
SFC的新的可靠性为：0.839420
totalRelibility = 1.769089
nfvid = 12
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 12
self.VNF_reliability = 0
nfvid = 13
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 13
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
nfvid = 15
self.VNF_reliability = 0
VNF的可靠性为： 0.970000
nfvid = 15
self.VNF_reliability = 0
SFC的新的可靠性为：0.805391
totalRelibility = 2.574480
needMigratedVNFList = 
[15]
destinationPhysicalNodeList = 
[24]
migrationTime = 5.458760
[12, 13, 14, 15]
SFCDelayAfterMigration = 704.400000
SFCDelayBeforMigration = 645.700000
58.700000000000045
delayIncreationOfSFC = 58.700000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.153156
additionnalCost = 0.000000
cost = 64.311916
migVNFWithMaxFlowList1 = 
[15]
VNFWithMaxFlowPlan = 
[24]
VNFWithMaxFlowPlan[i] = 24
VNFWithMaxFlowPlan组 554行，des_list1 = 
[24]
nfvid = 6
self.VNF_reliability = 0
VNF的可靠性为： 0.999000
nfvid = 6
self.VNF_reliability = 0
nfvid = 7
self.VNF_reliability = 0
VNF的可靠性为： 0.990000
nfvid = 7
self.VNF_reliability = 0
nfvid = 8
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 8
self.VNF_reliability = 0
SFC的新的可靠性为：0.929669
totalRelibility = 0.929669
nfvid = 9
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 9
self.VNF_reliability = 0
nfvid = 10
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 10
self.VNF_reliability = 0
nfvid = 11
self.VNF_reliability = 0
VNF的可靠性为： 0.940000
nfvid = 11
self.VNF_reliability = 0
SFC的新的可靠性为：0.839420
totalRelibility = 1.769089
nfvid = 12
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 12
self.VNF_reliability = 0
nfvid = 13
self.VNF_reliability = 0
VNF的可靠性为： 0.950000
nfvid = 13
self.VNF_reliability = 0
nfvid = 14
self.VNF_reliability = 0
VNF的可靠性为： 0.920000
nfvid = 14
self.VNF_reliability = 0
nfvid = 15
self.VNF_reliability = 0
VNF的可靠性为： 0.970000
nfvid = 15
self.VNF_reliability = 0
SFC的新的可靠性为：0.805391
totalRelibility = 2.574480
needMigratedVNFList = 
[15]
destinationPhysicalNodeList = 
[24]
migrationTime = 6.039889
[12, 13, 14, 15]
SFCDelayAfterMigration = 821.800000
SFCDelayBeforMigration = 763.100000
58.700000000000045
delayIncreationOfSFC = 58.700000
resourceIncreationOfSFC = 0.000000
QoSDecreationOfSFC = 0.129961
additionnalCost = 0.000000
cost = 64.869850
migVNFWithMinReliaOnSFCIdList = 
[6]
迁移结束，迁移方案以及迁移的VNF为：
[24]
[15]
迁移的SFC为： 6
8 plus
此VNF占用的CPU = 13
此VNF占用的内存 = 7
vnf_id = 15
此VNF迁移之前所在的物理节点为：15
此VNF迁移之后所在的物理节点为：24
读取文件第i行 0 
读取文件第i行 1 
读取文件第i行 2 
读取文件第i行 3 
读取文件第i行 4 
读取文件第i行 5 
读取文件第i行 6 
读取文件第i行 7 
读取文件第i行 8 
读取文件第i行 9 
读取文件第i行 10 
读取文件第i行 11 
读取文件第i行 12 
读取文件第i行 13 
读取文件第i行 14 
迁移前的node id 所在的行为：14
node_CPU_before = 93
node_memo_before = 93
读取文件第i行 15 
读取文件第i行 16 
读取文件第i行 17 
读取文件第i行 18 
读取文件第i行 19 
读取文件第i行 20 
读取文件第i行 21 
读取文件第i行 22 
读取文件第i行 23 
迁移后的物理节点所在的行为： 23
读取文件第i行 24 
node_CPU_before = 106
node_memo_before = 100
至此，VNF迁移导致的物理机的资源的修改已经完成
迁移之后的物理节点为： 24
[[[24], [15], 6, [15]]]
迁移一条SFC上的VNF方法结束

Process finished with exit code 0
